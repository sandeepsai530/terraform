session-23:
-----------
introduction to Terraform
creation of EC2 and Security Group

session-24:
-----------
indetail about variables
types of variables and priority while apply
conditions

session-25:
-----------
locals
data sources
conditions
terraform state locking

session-26:
-----------
Dynamic blocks
for_each
provisoners - local exec and remote exec
multiple environments in terraform - tfvars,workspaces, seperate codebase

session-27:
-----------
workspaces
terraform modules

session-28:
-----------
VPC overview manual creation
created basic VPC using terraform

session-29:
-----------
VPC module using terraform

session-30:
-----------
revised VPC module
created SG module
discussed one realtime issue that can be discussed @48:00
ssm parameter

session-31:
-----------
**join function to convert from list to stringlist @15:00
**split function @39:00
creation of bastion host - bit confusing practice again
loadbalancer discussion with manual creation

session-32:
-----------
created app alb via terraform
stateful vs stateless discussion

session-33:
-----------
VPN and demonstration
file function
RDS
can we install VPN in office laptops @01:27:00

session-34:
-----------
creating RDS via terraform

**for i in $(ls -dr *); do cd $i; terraform destroy -auto-approve; cd ..; done 

session-35:
-----------
**repeat this session
null resource
auto scaling
developed project using anisble via terraform
@01:27:00 - explaining detailed flow - repeat again

session-36:
-----------
created AMI,Launch template, ASG manually for the expense project
created AMI,Launch template, ASG using terraform for expense project

session-37:
-----------
discussed in detail about configuring database and backend servers with demo.
implementing ACM using terraform for frontned
implementing loadbalancer for frontned

session-38:
-----------
implementing frontned application along with certificates

session-39:
-----------
CDN - Content Delivery Network
implemented CDN using terraform
implemented complete project

session-40:
-----------
OSI layers
NACL vs SG

session-41:
-----------
terraform state locking
terraform taint
terraform target
terraform import
how can you secure statefile in s3 bucket

session-42:
-----------
Physical server vs VirtualMachines vs Docker

session-43:
-----------
docker commands FROM,RUN,CMD,LABEL,ENV,ADD

session-44:
-----------
Entrypoint vs CMD
USER,WORKDIR,ARG
ARG vs ENV - practice again

session-45:
-----------
recap all the dockerfile instructions
created mysql dockerfile
created backend dockerfile
discusses about bridge network in docker

session-46:
-----------
host network
docker volumes
docker compose

session-47:
-----------
docker layers
docker build kit - DOCKER_BUILDKIT=0
optimise docker layers
multi-stage builds
docker architecture
docker swarm

session-48
----------
kubernetes introduction
creation of eks cluster
Namespace

session-49
----------
env 
resource requests and limits
configmaps
secrets
services - clusterIP, NodePort, LoadBalancer

session-50:
-----------
replicaset
deployment
created expense project using all the resources
kubens
review at 01:19:00 minute

session-51:
-----------
volumes
EBS - EFS
PV, PVC , default values
static provisioning
Scheduler - Node selector

session-52:
-----------
api-resources 
Dynamic provisioning
EFS - Elastic File Sharing - static and Dynamic
StatefulSet

session-53:
-----------
StatefulSet and headless service
StatefulSet vs deployment
created expense project using all the resources - need to implement this
ASG - Vertical scaling and Horizontal scaling

session-54:
-----------
Helm Charts
expense project using Helm Charts

session-55:
-----------
taints and tolerations
affinity and anti affinity
Ingress controller introduction

session-56:
-----------
Ingress controller implementation
RBAC

session-57:
-----------
ServiceAccounts
Init Containers
internal volumes - emptyDir and Hostpath

session-58:
-----------
DaemonSet
terraform eks - expense project - very important - practice practice practice

session-59:
-----------
RDS
Blue/Green 
TCP vs UDP

session-60:
-----------
Expense project using terraform with Ingress